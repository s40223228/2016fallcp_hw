<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall CPA 課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2017-01-13T00:00:00+08:00</updated><entry><title>CP W17練習</title><link href="./cp-w17lian-xi.html" rel="alternate"></link><published>2017-01-13T00:00:00+08:00</published><updated>2017-01-13T00:00:00+08:00</updated><author><name>40223228</name></author><id>tag:,2017-01-13:./cp-w17lian-xi.html</id><summary type="html">&lt;p&gt;單線旋轉動畫:&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;canvas id="onebar" width="400" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import window
from browser import timer
import math
canvas = document["onebar"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

def line(x1, y1, x2, y2):
    # 以下可以利用 ctx 物件進行畫圖
    # 先畫一條直線
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

line(200, 200, 200, 300)
circle(200, 200, 5)

x1 = 200
y1 = 200
r = 100
deg = math.pi/180

theta = 0

# 每隔特定時間, 進行動畫繪製
def animate():
    global theta
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製直線與圓心球
    x2 = x1 +  r*math.cos(theta*deg)
    y2 = y1 +  r*math.sin(theta*deg)
    line(x1, y1, x2, y2)
    # 再加一條小線段
    x3 = x2 + 50*math.cos(10*theta*deg)
    y3 = y2 + 50*math.sin(10*theta*deg)
    line(x2, y2, x3, y3)
    circle(x1, y1, 5)
    theta += 1

timer.set_interval(animate, 50)
&lt;/script&gt;

&lt;p&gt;上述繪圖的程式碼如下:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;
&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;
&lt;canvas id="onebar" width="400" height="400"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import window
from browser import timer
import math
canvas = document["onebar"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

def line(x1, y1, x2, y2):
    # 以下可以利用 ctx 物件進行畫圖
    # 先畫一條直線
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

line(200, 200, 200, 300)
circle(200, 200, 5)

x1 = 200
y1 = 200
r = 100
deg = math.pi/180

theta = 0

# 每隔特定時間, 進行動畫繪製
def animate():
    global theta
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製直線與圓心球
    x2 = x1 +  r*math.cos(theta*deg)
    y2 = y1 +  r*math.sin(theta*deg)
    line(x1, y1, x2, y2)
    # 再加一條小線段
    x3 = x2 + 50*math.cos(10*theta*deg)
    y3 = y2 + 50*math.sin(10*theta*deg)
    line(x2, y2, x3, y3)
    circle(x1, y1, 5)
    theta += 1

timer.set_interval(animate, 50)
&lt;/script&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>CP W18練習-1</title><link href="./cp-w18lian-xi-1.html" rel="alternate"></link><published>2017-01-13T00:00:00+08:00</published><updated>2017-01-13T00:00:00+08:00</updated><author><name>40223228</name></author><id>tag:,2017-01-13:./cp-w18lian-xi-1.html</id><summary type="html">&lt;p&gt;耶誕快樂&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;div id="con"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as do
from browser import html
c = do["con"]
def compa(e):
    your_input = input("請輸入一個整數!")
    # 如何判斷所輸入的整數比 10 大
    try:
        if int(your_input) &gt; 10:
            c &lt;= "所輸入的整數:" + your_input + "比 10 大" + html.BR()
        else:
            c &lt;= "所輸入的整數:" + your_input + "比 10 小" + html.BR()
    except:
        c &lt;= "請輸入整數!!" + html.BR()

#print("test")
'''
for i in range(5):
    c &lt;= "test" + html.BR()
'''
do["b1"].bind("click", compa)
&lt;/script&gt;

&lt;p&gt;&lt;button id="b1"&gt;compa&lt;/button&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;div id="con"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as do
from browser import html
c = do["con"]
def compa(e):
    your_input = input("請輸入一個整數!")
    # 如何判斷所輸入的整數比 10 大
    try:
        if int(your_input) &gt; 10:
            c &lt;= "所輸入的整數:" + your_input + "比 10 大" + html.BR()
        else:
            c &lt;= "所輸入的整數:" + your_input + "比 10 小" + html.BR()
    except:
        c &lt;= "請輸入整數!!" + html.BR()

#print("test")
'''
for i in range(5):
    c &lt;= "test" + html.BR()
'''
do["b1"].bind("click", compa)
&lt;/script&gt;
&lt;button id="b1"&gt;compa&lt;/button&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>CP W18練習-2</title><link href="./cp-w18lian-xi-2.html" rel="alternate"></link><published>2017-01-13T00:00:00+08:00</published><updated>2017-01-13T00:00:00+08:00</updated><author><name>40223228</name></author><id>tag:,2017-01-13:./cp-w18lian-xi-2.html</id><summary type="html">&lt;p&gt;2017 年元旦快樂&lt;/p&gt;


&lt;p&gt;產生一個介於 1-100 的整數, 列印在網頁上.&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;div id="newyear"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]

def gen_int():
    num = random.randint(1, 49)
    # 設法將 num 列印在網頁上
    #print_location = document["newyear"]
    print_location &lt;= num + html.BR()

def lottery(e):
    for i in range(6):
        gen_int()
    print_location &lt;= "(可能重複)恭喜中獎!" + html.BR()

#document["but1"].bind("click", gen_int)
document["but1"].bind("click", lottery)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but1"&gt;產生 1-49 整數亂數 (可能重複)&lt;/button&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;&lt;div id="newyear"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]

def gen_int():
    num = random.randint(1, 49)
    # 設法將 num 列印在網頁上
    #print_location = document["newyear"]
    print_location &lt;= num + html.BR()

def lottery(e):
    for i in range(6):
        gen_int()
    print_location &lt;= "(可能重複)恭喜中獎!" + html.BR()

#document["but1"].bind("click", gen_int)
document["but1"].bind("click", lottery)
&lt;/script&gt;
&lt;button id="but1"&gt;產生 1-49 整數亂數 (可能重複)&lt;/button&gt;
&lt;/pre&gt;

&lt;p&gt;因為上述程式可能會產生相同的號碼, 改用&lt;a href="https://docs.python.org/3/library/random.html#random.sample"&gt; random.sample()&lt;/a&gt;, 使其產生六個不同的整數!!&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]

def lottery(e):
    num_list = random.sample(list(range(1, 50)), 6)
    for i in range(6):
        print_location &lt;= num_list[i] + html.BR()
    print_location &lt;= "(不會重複)恭喜中獎!" + html.BR()

document["but2"].bind("click", lottery)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but2"&gt;(不會重複)恭喜中獎&lt;/button&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]

def lottery(e):
    num_list = random.sample(list(range(1, 50)), 6)
    for i in range(6):
        print_location &lt;= num_list[i] + html.BR()
    print_location &lt;= "(不會重複)恭喜中獎!" + html.BR()

document["but2"].bind("click", lottery)
&lt;/script&gt;
&lt;button id="but2"&gt;恭喜中獎&lt;/button&gt;
&lt;/pre&gt;

&lt;p&gt;以下建立一個猜數字遊戲:&lt;/p&gt;
&lt;div id="id3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random

id3 = document["id3"]
def guess(ev):
    # 清除 id3 中的內容
    id3.clear()
    id3 &lt;= "開始玩猜數字遊戲" + html.BR()
    標準答案 = random.randint(1, 100)
    你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
    猜測次數 = 1
    while 標準答案 != 你猜的數字:
        if 標準答案 &lt; 你猜的數字:
            #print("太大了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "猜第" + str(猜測次數) + "次, 太大了，再猜一次 :)加油" + html.BR()
        else:
            #print("太小了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "猜第" + str(猜測次數) + "次, 太小了，再猜一次 :)加油" + html.BR()
        你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
        猜測次數 += 1

    #print("猜對了！總共猜了", 猜測次數, "次")
    id3 &lt;= "猜對了！答案為" + str(標準答案) + ", 總共猜了" + str(猜測次數) + "次"

document["but3"].bind("click", guess)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but3"&gt;玩猜數字遊戲&lt;/button&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;&lt;div id="id3"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random

id3 = document["id3"]
def guess(ev):
    # 清除 id3 中的內容
    id3.clear()
    id3 &lt;= "開始玩猜數字遊戲" + html.BR()
    標準答案 = random.randint(1, 100)
    你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
    猜測次數 = 1
    while 標準答案 != 你猜的數字:
        if 標準答案 &lt; 你猜的數字:
            #print("太大了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "猜第" + str(猜測次數) + "次, 太大了，再猜一次 :)加油" + html.BR()
        else:
            #print("太小了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "猜第" + str(猜測次數) + "次, 太小了，再猜一次 :)加油" + html.BR()
        你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
        猜測次數 += 1

    #print("猜對了！總共猜了", 猜測次數, "次")
    id3 &lt;= "猜對了！答案為" + str(標準答案) + ", 總共猜了" + str(猜測次數) + "次"

document["but3"].bind("click", guess)
&lt;/script&gt;
&lt;button id="but3"&gt;玩猜數字遊戲&lt;/button&gt;
&lt;/pre&gt;

&lt;p&gt;以下則利用程式執行猜數字遊戲:&lt;/p&gt;
&lt;p&gt;&lt;button id="but4"&gt;利用程式玩猜數字&lt;/button&gt;&lt;/p&gt;
&lt;div id="id4"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random

id4 = document["id4"]
def autoguess(ev):
    執行次數 = 100
    總猜測次數 = 0
    for i in range(執行次數):
        id4 &lt;= "第" + str(i+1) + "次玩:" + html.BR()
        下限 = 1
        上限 = 100
        標準答案 = random.randint(下限, 上限)
        pc猜的數字 = random.randint(下限, 上限)
        #print(標準答案, pc猜的數字)
        #integer int()
        #string str()
        #float float()
        #你猜的數字 = int(input("請輸入您所猜的整數:"))
        猜測次數 = 1
        while 標準答案 != pc猜的數字:
            if 標準答案 &lt; pc猜的數字:
                #print("太大了，再猜一次 :)加油")
                # 因此已經確定"pc猜的數字"不是答案, 因此 - 1
                id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太大了!" + html.BR()
                上限 = pc猜的數字 - 1
            else:
                #print("太小了，再猜一次 :)加油")
                # 因此已經確定"pc猜的數字"不是答案, 因此 + 1
                id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太小了!" + html.BR()
                下限 = pc猜的數字 + 1
            #pc猜的數字 = int(input("請輸入您所猜的整數:"))
            pc猜的數字 = random.randint(下限, 上限)
            猜測次數 += 1

        #print("猜對了！總共猜了", 猜測次數, "次")
        id4 &lt;= "電腦猜對了, 答案為: " + str(標準答案) + ", 總共猜了 "+ str(猜測次數) + "次" + html.BR()
        總猜測次數 += 猜測次數
    平均猜測次數 = int(總猜測次數/執行次數)
    #print("平均次數", 平均猜測次數)
    id4 &lt;= "平均次數: " + str(平均猜測次數)

document["but4"].bind("click", autoguess)
&lt;/script&gt;

&lt;pre class="brush: python"&gt;&lt;div id="id4"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random

id4 = document["id4"]
def autoguess(ev):
    執行次數 = 100
    總猜測次數 = 0
    for i in range(執行次數):
        id4 &lt;= "第" + str(i+1) + "次玩:" + html.BR()
        下限 = 1
        上限 = 100
        標準答案 = random.randint(下限, 上限)
        pc猜的數字 = random.randint(下限, 上限)
        #print(標準答案, pc猜的數字)
        #integer int()
        #string str()
        #float float()
        #你猜的數字 = int(input("請輸入您所猜的整數:"))
        猜測次數 = 1
        while 標準答案 != pc猜的數字:
            if 標準答案 &lt; pc猜的數字:
                #print("太大了，再猜一次 :)加油")
                # 因此已經確定"pc猜的數字"不是答案, 因此 - 1
                id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太大了!" + html.BR()
                上限 = pc猜的數字 - 1
            else:
                #print("太小了，再猜一次 :)加油")
                # 因此已經確定"pc猜的數字"不是答案, 因此 + 1
                id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太小了!" + html.BR()
                下限 = pc猜的數字 + 1
            #pc猜的數字 = int(input("請輸入您所猜的整數:"))
            pc猜的數字 = random.randint(下限, 上限)
            猜測次數 += 1

        #print("猜對了！總共猜了", 猜測次數, "次")
        id4 &lt;= "電腦猜對了, 答案為: " + str(標準答案) + ", 總共猜了 "+ str(猜測次數) + "次" + html.BR()
        總猜測次數 += 猜測次數
    平均猜測次數 = int(總猜測次數/執行次數)
    #print("平均次數", 平均猜測次數)
    id4 &lt;= "平均次數: " + str(平均猜測次數)

document["but4"].bind("click", autoguess)
&lt;/script&gt;
&lt;button id="but4"&gt;利用程式玩猜數字&lt;/button&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>CP W13 攝氏溫度</title><link href="./cp-w13-she-shi-wen-du.html" rel="alternate"></link><published>2016-12-09T14:10:00+08:00</published><updated>2016-12-09T14:10:00+08:00</updated><author><name>40223228</name></author><id>tag:,2016-12-09:./cp-w13-she-shi-wen-du.html</id><summary type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- ch01 基本的列印與輸入函式 --&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import alert

'''
    # 利用 input() 取得使用者輸入, 然後進行資料處理或運算後, 列出結果
    #01-01.py
    print ("Hello World!")
    #01-02.py
    thetext = input("Enter some text ")
    print ("This is what you entered:")
    print (thetext)
    #01-03.py
    # Note that \n within quote marks forces a new line to be printed
    thetext = input("Enter some text\n")
    print ("This is what you entered:")
    print (thetext)
    #01-04.py
    prompt  = "Enter a some text "
    thetext = input(prompt)
    print ("This is what you entered:")
    print (thetext)
'''

def get_input(ev):
    the_input= input("請輸入")
    alert("輸入為:"+str(the_input))

document['ch01'].bind('click',get_input)
&lt;/script&gt;

&lt;p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;編寫一個可以將使用者輸入的攝氏溫度, 轉為華氏溫度.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div id="temperature"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
# 利用 document 根據 div 標註 id 設為 container 變數
container = doc['temperature']

# 因為此函式與滑鼠互動, 需要 event 當作輸入
def convTemp(event):
    mystring = ""
    cdegree = input("請輸入攝氏溫度:")
    fdegree = float(cdegree)*9/5 + 32
    output_string = "攝氏 " + str(cdegree) + "度=華氏 " + str(fdegree) + "度" + html.BR()
    container &lt;= output_string

# 與 id 為 'w13-1' 對應的 button 綁定, 且滑鼠 click 後, 呼叫 convTemp 函式執行
doc['w13-1'].bind('click',convTemp)
&lt;/script&gt;

&lt;p&gt;&lt;button id="w13-1"&gt;取攝氏溫度, 轉為華氏溫度&lt;/button&gt;&lt;/p&gt;

&lt;pre class="brush: python"&gt;
&lt;div id="temperature"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
# 利用 document 根據 div 標註 id 設為 container 變數
container = doc['temperature']

# 因為此函式與滑鼠互動, 需要 event 當作輸入
def convTemp(event):
    mystring = ""
    cdegree = input("請輸入攝氏溫度:")
    fdegree = float(cdegree)*9/5 + 32
    output_string = "攝氏 " + str(cdegree) + "度=華氏 " + str(fdegree) + "度" + html.BR()
    container &lt;= output_string

# 與 id 為 'w13-1' 對應的 button 綁定, 且滑鼠 click 後, 呼叫 convTemp 函式執行
doc['w13-1'].bind('click',convTemp)
&lt;/script&gt;
&lt;button id="w13-1"&gt;取攝氏溫度, 轉為華氏溫度&lt;/button&gt;
&lt;/pre&gt;</summary><category term="W13"></category></entry><entry><title>CP W13練習</title><link href="./cp-w13lian-xi.html" rel="alternate"></link><published>2016-12-09T14:10:00+08:00</published><updated>2016-12-09T14:10:00+08:00</updated><author><name>40223228</name></author><id>tag:,2016-12-09:./cp-w13lian-xi.html</id><summary type="html">&lt;p&gt;將&lt;a href=" http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt; http://mde.tw/2016fallcp/course/Python3Programs.txt 整理成Brython&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="container"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['container']
mystring =""
num = input("請輸入重複執行次數:")
#for i in range(1,11):
for i in range(1,int(num)+1):
    mystring +=str(i)+":hello mde"+html.BR()    
container&lt;= mystring
&lt;/script&gt;

&lt;p&gt;開始進行範例分類&lt;/p&gt;
&lt;p&gt;接受使用者的輸入&lt;/p&gt;
&lt;p&gt;利用alert()顯示結果&lt;/p&gt;
&lt;p&gt;直接列印結果&lt;/p&gt;</summary><category term="W13"></category></entry><entry><title>CP W14練習</title><link href="./cp-w14lian-xi.html" rel="alternate"></link><published>2016-12-09T14:10:00+08:00</published><updated>2016-12-09T14:10:00+08:00</updated><author><name>40223228</name></author><id>tag:,2016-12-09:./cp-w14lian-xi.html</id><summary type="html">&lt;p&gt;將&lt;a href=" http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt; http://mde.tw/2016fallcp/course/Python3Programs.txt 整理成Brython&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- ch01 基本的列印與輸入函式 --&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import alert

'''
    # 利用 input() 取得使用者輸入, 然後進行資料處理或運算後, 列出結果
    #01-01.py
    print ("Hello World!")
    #01-02.py
    thetext = input("Enter some text ")
    print ("This is what you entered:")
    print (thetext)
    #01-03.py
    # Note that \n within quote marks forces a new line to be printed
    thetext = input("Enter some text\n")
    print ("This is what you entered:")
    print (thetext)
    #01-04.py
    prompt  = "Enter a some text "
    thetext = input(prompt)
    print ("This is what you entered:")
    print (thetext)
'''

def get_input(ev):
    the_input= input("請輸入")
    alert("輸入為:"+str(the_input))

document['ch01'].bind('click',get_input)
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import alert

def get_input(ev):
    the_input= input("請輸入")
    alert("輸入為:"+str(the_input))

document['ch01'].bind('click',get_input)
&lt;/script&gt;
&lt;button id="ch01"&gt;取輸入後, 列印出來&lt;/button&gt;
&lt;/pre&gt;</summary><category term="W14"></category></entry><entry><title>W10 Brython 繪圖範例</title><link href="./w10-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-18T02:09:00+08:00</published><updated>2016-11-18T02:09:00+08:00</updated><author><name>40223228</name></author><id>tag:,2016-11-18:./w10-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;
&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="guitarchord" width="600" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math

canvas = doc["guitarchord"]
ctx = canvas.getContext("2d")
ctx.beginPath()
ctx.lineWidth = 1
inc=5
for i in range(100):
    ctx.moveTo(100+i*inc,100)
    ctx.lineTo(100+i*inc, 200)

# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

</summary><category term="Brython"></category></entry><entry><title>W12-1 Brython 繪圖範例</title><link href="./w12-1-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-18T02:09:00+08:00</published><updated>2016-11-18T02:09:00+08:00</updated><author><name>40223228</name></author><id>tag:,2016-11-18:./w12-1-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

w=20
h=30
background(100,100,w,h,5,6,ctx)
&lt;/script&gt;</summary><category term="Brython"></category></entry><entry><title>W12-2 Brython 繪圖範例</title><link href="./w12-2-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-18T02:09:00+08:00</published><updated>2016-11-18T02:09:00+08:00</updated><author><name>40223228</name></author><id>tag:,2016-11-18:./w12-2-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
canvasText(100,  80, 20, "A", "b", "", "black", ctx)
&lt;/script&gt;</summary><category term="Brython"></category></entry><entry><title>W12 Brython 繪圖範例</title><link href="./w12-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-18T02:09:00+08:00</published><updated>2016-11-18T02:09:00+08:00</updated><author><name>40223228</name></author><id>tag:,2016-11-18:./w12-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫方格線 --&gt;

&lt;canvas id="japanflag3" width="600" height="300"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 250)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
'''
# 以下將 canvas 畫布內容轉為 img tag, 並且顯示在 container 物件
img = canvas.toDataURL("image/png")
# 利用 re.sub, 將原本要直接開圖檔的 data:image 標頭, 改為 data:application/octet-stream, 可直接下載存檔
# 使用 re 模組之前必須先 import re
img = re.sub("^data:image\/[^;]", "data:application/octet-stream", img)
# 宣告 anchor markup attribute download, 可以指定下載儲存檔名
container &lt;= html.A("save image", href=img, download="guitar_chord.png")
'''
&lt;/script&gt;</summary><category term="Brython"></category></entry></feed>